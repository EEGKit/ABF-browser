@page "/AbfFolder"
@using ProjectServer.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Abf Folder</PageTitle>

<div class="p-2" style="background: #EEEEEE;">
	<div class="d-flex flex-row">
		<div>
			<div class="fw-bold lh-1" style="font-family: 'Arial Narrow';">Abf Folder Browser</div>

			<div class="font-monospace" style="font-size: .8em;">
				@foreach ((string name, string url) in GetSubFolderLinks(SelectedFolder?.FolderPath))
				{
					<a href=@url style="color: blue;">@name</a>

					<span style="opacity:.5;">/</span>
				}
			</div>

		</div>
		<div class="ms-2">
			<button class="btn btn-sm btn-outline-primary" onclick="@GetCopyPathJS()">Copy Path</button>

			@if (SelectedFolder?.AbfFilePaths.Length > 0)
			{
				<button class="btn btn-sm btn-outline-primary ms-2" @onclick="@LoadExperimentInfo">Experiment Notes</button>
			}
		</div>
	</div>
</div>

@if (SelectedFolder is null)
{
	<div>path not yet set...</div>
}
else
{
	<div style="display: grid; grid-template-rows: auto; grid-template-columns: 250px auto;">

		<nav class="">
			<div class="ps-2" style="height: 100vh; overflow-x:hidden; overflow-y: auto;">

				@if (SelectedFolder.AbfParents.Length == 0)
				{
					<div class="lh-1 pt-2" style="font-family: 'Arial Narrow'; font-weight: 600;">
						SubFolders
					</div>

					@foreach (string folderName in SelectedFolder.SubFolderNames)
					{
						string subFolderUrl = "/AbfFolder?path=" + SelectedFolder.FolderPath.Replace("/", "\\") + "\\" + folderName;

						<div style="font-size: .8em; line-height: 120%;">
							<a href=@subFolderUrl class="font-monospace" style="color: blue;">
								@folderName
							</a>
						</div>
					}
				}

				@foreach (string group in SelectedFolder.AbfParents.SelectMany(x => x.Tags).Append("Unclassified").Distinct().OrderBy(x => x))
				{
					AbfParent[] matchingParents = SelectedFolder.AbfParents
					.Where(x => group == "Unclassified" ? x.Tags.Length == 0 : x.Tags.Contains(group))
					.ToArray();

					if (!matchingParents.Any())
						continue;

					<div class="py-2">
						<div class="lh-1" style="font-family: 'Arial Narrow'; font-weight: 600;">
							@group
						</div>
						@foreach (AbfParent parent in matchingParents)
						{
							<div style="font-size: .8em; line-height: 120%;">
								<!-- TODO: make link valid so it can be copied -->
								<a href="" class="font-monospace" style="background-color: @parent.Color; color: blue;" onclick=@(() => SelectParent(@parent.AbfID)) @onclick:preventDefault>
									@parent.AbfID
								</a>
								<span class="font-monospace" style="color: #AAAAAA">@parent.ChildAbfPaths.Count()</span>
								<span style="font-family: 'Arial Narrow'; color: #AAAAAA">@parent.Comment</span>
							</div>
						}
					</div>
				}
			</div>
		</nav>

		@if (SelectedParent is null)
		{
			<main class="px-2">
				<h3 class="mt-3 fs-3 lh-1">Experiment Notes</h3>

				<div class="lh-1">
					<code>@SelectedFolder.FolderPath\experiment.txt</code>
				</div>

				@if (string.IsNullOrWhiteSpace(SelectedFolder.ExperimentTxt))
				{
					<div class="alert alert-warning my-4 d-inline-block" role="alert">
						<strong>⚠️ WARNING:</strong> Experiment notes file has not been created!
					</div>
				}
				else
				{
					<div class="bg-light border rounded my-4 p-2">
						<pre>@SelectedFolder.ExperimentTxt</pre>
					</div>
				}
			</main>
		}
		else
		{
			<div>
				<AbfParentEditor AbfPath="@SelectedParent.AbfFilePath"
						 Color="@SelectedParent.Color"
						 Comment="@SelectedParent.Comment" />

				<AbfInfoTable AbfPaths="@SelectedParent.ChildAbfPaths" />

				@foreach (string imagePath in SelectedParent.ChildImagePaths)
				{
					<AnalysisThumbnail ImagePath=@imagePath />
				}
			</div>
		}
	</div>
}

@code {

	[Parameter]
	[SupplyParameterFromQuery(Name = "path")]
	public string? Path
	{
		get => _path;
		set
		{
			_path = value;
			LoadExperimentInfo();
		}
	}

	private string? _path = null;

	private string Status { get; set; } = "Loading...";

	private AbfFolder? SelectedFolder;

	private AbfParent? SelectedParent { get; set; } = null;

	protected override async Task OnParametersSetAsync()
	{
		Status = "Loading...";
		string apiUrl = NavigationManager.BaseUri + "api/AbfFolder?path=" + Path;
		SelectedFolder = await Http.GetFromJsonAsync<AbfFolder>(apiUrl);
		Status = "Loaded.";
	}

	private void LoadExperimentInfo()
	{
		SelectedParent = null;
		StateHasChanged();
	}

	private void SelectParent(string abfid)
	{
		if (SelectedFolder is not null)
		{
			foreach (AbfParent abfParent in SelectedFolder.AbfParents.Where(x => x.AbfID == abfid))
			{
				SelectedParent = abfParent;
				StateHasChanged();
				return;
			}
		}

		LoadExperimentInfo();
	}

	private (string, string)[] GetSubFolderLinks(string? path)
	{
		List<(string, string)> links = new();

		path = path?.Replace("\\", "/");
		while (!string.IsNullOrEmpty(path))
		{
			string folderName = System.IO.Path.GetFileName(path);
			string folderUrl = "AbfFolder?path=" + path.Replace("/", "\\");
			links.Insert(0, (folderName, folderUrl));
			path = System.IO.Path.GetDirectoryName(path) ?? string.Empty;
		}

		return links.ToArray();
	}

	private string GetCopyPathJS()
	{
		string safePath = SelectedFolder?.FolderPath.Replace("\\", "/") ?? string.Empty;
		return $"navigator.clipboard.writeText('{safePath}')";
	}
}
