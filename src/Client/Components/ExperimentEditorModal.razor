@using ProjectServer.Shared

<div class="modal fade" data-bs-backdrop="static" id="editExperimentModal" tabindex="-1">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">

			<div class="modal-header">
				<div>
					<h5 class="modal-title">Edit Experiment</h5>
					<div>
						<code>@FolderPath</code>
					</div>
				</div>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>

			<div class="modal-body">

				<div class="form-floating mb-3">
					<input type="text" class="form-control" @bind=Title>
					<label>Title</label>
				</div>

				<div class="form-floating mb-3">
					<input type="text" class="form-control" @bind=Description>
					<label>Description</label>
				</div>

				<div class="form-floating mb-3">
					<textarea class="form-control" style="height: 200px" @bind=Notes></textarea>
					<label>Notes</label>
				</div>

			</div>

			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick=SaveChanges>Save</button>
			</div>

		</div>
	</div>
</div>

@code {
	[Parameter]
	[EditorRequired]
	public EventCallback<string> OnSave { get; set; }

	public string FolderPath { get; set; } = string.Empty;

	public string Title { get; set; } = string.Empty;

	public string Description { get; set; } = string.Empty;

	public string Notes { get; set; } = string.Empty;

	public Shared.DTOs.ExperimentInfo GetUpdatedInfo()
	{
		return new Shared.DTOs.ExperimentInfo()
			{
				FolderPath = FolderPath,
				Title = Title,
				Description = Description,
				Notes = Notes,
			};
	}

	public void PopulateFields(ExperimentFolder experiment)
	{
		FolderPath = experiment.FolderPath;
		Title = experiment.Title;
		Description = experiment.Description;
		Notes = experiment.Notes;
	}

	private async Task SaveChanges()
	{
		await OnSave.InvokeAsync();
	}
}
