@using ProjectServer.Shared
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div>

	<div class="bg-dark text-light p-2">
		<strong>ABF Folder</strong>
		<a class="ms-3" href='#' onclick="@GetCopyJS()" @onclick:preventDefault>Copy Path</a>
		<a class="ms-3" href='/'>Home Page</a>
	</div>

	<div class="p-2 d-flex" style="background-color: #f1f1f1;">
		<div class="font-monospace">
			@foreach (string path in GetChildPaths())
			{
				<span>
					<a href='' class="mx-0 px-0" style="color: blue;" onclick="@(() => LoadPath(@path))" @onclick:preventDefault>
						@Path.GetFileName(path)
					</a>
				</span>

				<span style="opacity: .7">/</span>
			}
		</div>
	</div>

</div>

<div>
	@foreach (string folderName in GetSubFolderNames())
	{
		<div class="ps-2">
			<span>📂</span>
			<a href='' class="font-monospace" style="color: blue;" onclick="@(() => EnterSubfolder(@folderName))" @onclick:preventDefault>
				@folderName
			</a>
		</div>
	}
</div>

@code {

	[Parameter]
	[EditorRequired]
	public AbfFolder? AbfFolder { get; set; } = null;

	[Parameter]
	[EditorRequired]
	public EventCallback<string> OnPathChangedCallback { get; set; }

	private string[] GetSubFolderNames()
	{
		if (AbfFolder is null)
			return Array.Empty<string>();

		if (AbfFolder.AbfFilePaths.Any())
			return Array.Empty<string>();

		return AbfFolder.SubFolderNames;
	}

	private async Task LoadPath(string newPath)
	{
		await OnPathChangedCallback.InvokeAsync(newPath);
	}

	private async Task EnterSubfolder(string subFolderName)
	{
		await LoadPath(AbfFolder?.FolderPath + "\\" + subFolderName);
	}

	private string[] GetChildPaths()
	{
		if (AbfFolder is null)
			return Array.Empty<string>();

		List<string> paths = new();
		string path = AbfFolder.FolderPath.Replace("\\", "/");
		while (!string.IsNullOrEmpty(path))
		{
			paths.Insert(0, path);
			path = Path.GetDirectoryName(path) ?? string.Empty;
		}
		return paths.Where(x => !string.IsNullOrWhiteSpace(Path.GetFileName(x))).ToArray();
	}

	private string GetCopyJS()
	{
		if (AbfFolder is null)
			return string.Empty;

		string text = AbfFolder.FolderPath.Replace("\\", "/");
		return $"navigator.clipboard.writeText('{text}')";
	}
}
